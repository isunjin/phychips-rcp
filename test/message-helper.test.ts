import { expect } from 'chai';
import { MessageHelper } from '../lib/message-helper';

describe('unwrapperResponse function test', () => {
    it('should be Empty', () => {
        const result = MessageHelper.unwrapperResponse(Buffer.from([0xBB, 0x02, 0x7E]));
        expect(result).to.equals("");
    });
    it('should be PRM92X', () => {
        const result = MessageHelper.unwrapperResponse(Buffer.from([0xBB, 0x01, 0x03, 0x00, 0x0A, 0x50, 0x52, 0x4D, 0x39, 0x32, 0x58, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x9C, 0xEE]));
        expect(result).to.equals("PRM92X");
    });
    it('should be PR9200_v1.5.3', () => {
        const result = MessageHelper.unwrapperResponse(Buffer.from([0xBB, 0x01, 0x03, 0x00, 0x1E, 0x50, 0x52, 0x39, 0x32, 0x30, 0x30, 0x5F, 0x76, 0x31, 0x2E, 0x35, 0x2E, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0xCC, 0x7A]));
        expect(result).to.equals("PR9200_v1.5.3");
    });
});

describe('unwrapperNotification function test', () => {
    it('should be Empty', () => {
        const result = MessageHelper.unwrapperNotification(Buffer.from([0xBB, 0x00, 0x7E]));
        expect(result).to.equals("");
    });
    it('should be 0x1F', () => {
        const result = MessageHelper.unwrapperNotification(Buffer.from([0xBB, 0x02, 0x2A, 0x00, 0x01, 0x1F, 0x7E, 0x70, 0xE6]));
        expect(result).to.equals("\u001f");
    });
});